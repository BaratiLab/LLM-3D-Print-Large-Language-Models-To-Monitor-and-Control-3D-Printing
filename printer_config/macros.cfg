[force_move]
# Enable commands that force potentially unsafe movement
enable_force_move: True

[gcode_macro SAFE_HOME]
gcode:
    {% set X = params.X %}
    {% set Y = params.Y %}
    G90
    SET_KINEMATIC_POSITION Z=0
    G0 Z10 F600
    G28 X Y
    G0 X{X} Y{Y}
    G28 Z

[gcode_macro END_PRINT]
gcode:
    # Move nozzle away from print while retracting
    G91
    M104 S190 
    M190 S60
    G1 X-2 Y-2 E-3 F300
    # Raise nozzle by 10mm
    G1 Z10 F3000
    G90
    # Disable steppers
    M84

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    M104 S150 
    M190 S60
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT


# [gcode_macro DISPLAY_EXTRUDE_MULTIPLIER]
# description: "Display the current extrusion multiplier"
# gcode:
#     # {action_respond_info("Current Extrusion Multiplier: {0}".format(printer.gcode_move.extrude_factor))}
#     # {action_respond_info("Current Speed Multiplier: {0}".format(printer.gcode_move.speed_factor))}
#     {% set extrude_factor = printer.gcode_move.extrude_factor %}
#     {% set extrude_percentage = extrude_factor * 100 %}
#     {action_respond_info("Current Extrusion Multiplier: {0:.2f}%".format(extrude_percentage))}


    
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
variable_last_extruder_temp: {'restore': False, 'temp': 0}
variable_restore_idle_timeout: 0
variable_idle_state: False
gcode:
  ##### Get user parameters or use default #####
  {% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}
  {% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
  {% set sp_move = client.speed_move|default(velocity) %}
  {% set runout_resume = True if client.runout_sensor|default("") == ""     # no runout
                    else True if not printer[client.runout_sensor].enabled  # sensor is disabled
                    else printer[client.runout_sensor].filament_detected %} # sensor status
  {% set can_extrude = True if printer.toolhead.extruder == ''           # no extruder defined in config
                  else printer[printer.toolhead.extruder].can_extrude %} # status of active extruder
  {% set do_resume = False %}
  {% set prompt_txt = [] %}
  ##### End of definitions #####

  #### Printer coming from timeout idle state ####
  {% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False
    {% if last_extruder_temp.restore %}
      RESPOND TYPE=echo MSG='{"Restoring \"%s\" temperature to %3.1f\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }'
      M109 S{last_extruder_temp.temp}
      {% set do_resume = True %}
    {% elif can_extrude %}
      {% set do_resume = True %}
    {% else %} 
      RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}'
      {% set _d = prompt_txt.append("\"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}
    {% endif %}

  #### Printer coming out of regular PAUSE state ####
  {% elif can_extrude %}
    {% set do_resume = True %}
  {% else %}
    RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}'
    {% set _d = prompt_txt.append("\"%s\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder) %}
  {% endif %}

  {% if runout_resume %}
    {% if do_resume %}
      {% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %} # restore idle_timeout time
      {client.user_resume_macro|default("")}
      _CLIENT_EXTRUDE
      RESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}

      ##### Preserve current speed and extrusion factor #####
      # {% set current_speed_factor = printer.gcode.speed_factor %}
      # {% set current_extrusion_factor = printer.gcode.extrude_factor %}
      {% set extrude_factor = printer.gcode_move.extrude_factor %}
      
      {% set extrude_percentage = extrude_factor * 100 %}
      {% set speed_factor = printer.gcode_move.speed_factor %}
      {% set speed_percentage = speed_factor * 100 %}
      
      M220 S{speed_percentage}
      M221 S{extrude_percentage}
      
    {% endif %}
  {% else %}
    RESPOND TYPE=error MSG='{"Resume aborted !!! \"%s\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}'
    {% set _d = prompt_txt.append("\"%s\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]) %}
  {% endif %}

  ##### Generate User Information box in case of abort #####
  {% if not (runout_resume and do_resume) %} 
    RESPOND TYPE=command MSG="action:prompt_begin RESUME aborted !!!"
    {% for element in prompt_txt %}
      RESPOND TYPE=command MSG='{"action:prompt_text %s" % element}' 
    {% endfor %}
    RESPOND TYPE=command MSG="action:prompt_footer_button Ok|RESPOND TYPE=command MSG=action:prompt_end|info"
    RESPOND TYPE=command MSG="action:prompt_show"
  {% endif %}
